FROM python:3.7-alpine AS build
WORKDIR /code
RUN apk add --no-cache python3 python3-dev libffi libffi-dev musl-dev gcc linux-headers openssl-dev

RUN python3 -m venv /code/venv
ENV PATH="/code/venv/bin:$PATH" VIRTUAL_ENV="/code/venv"

COPY requirements.txt ./
# install app dependencies
RUN pip install -r requirements.txt



FROM python:3.7-alpine  AS release  
ENV PYTHONUNBUFFERED 1
ENV  DJANGO_ENV ${DJANGO_ENV}
ENV  DJANGO_DEBUG True
ENV  DJANGO_SECRET_KEY "Djangokey"
ENV  DJANGO_PROJECT_ROOT /code/
ENV AZURE_TENANT_ID=${AZURE_TENANT_ID}
ENV AZURE_CLIENT_ID=${AZURE_CLIENT_ID}
ENV AZURE_CLIENT_SECRET=${AZURE_CLIENT_SECRET}
RUN mkdir -p /code /code/logs /code/azurebucket/logs/ /code/scripts/logs
COPY . /code
WORKDIR /code
COPY --from=build /code/ /code/


RUN python /code/manage.py migrate

CMD [ "./scripts/startgunicorn.sh" ]
EXPOSE 80 443 8000