FROM python:3.7-alpine AS base
WORKDIR /code
RUN apk add --update \
    postgresql-dev \
    gcc \
    musl-dev \
    linux-headers \
    libffi-dev \
    binutils \
    libc-dev \
    bash


FROM base AS dependencies  
COPY requirements.txt ./
# install app dependencies
RUN pip install -r requirements.txt

FROM dependencies AS build  
RUN mkdir -p /code /code/logs /code/azurebucket/logs/ /code/scripts/logs
WORKDIR /code
COPY . /code

FROM python:3.7-alpine  AS release  
ENV PYTHONUNBUFFERED 1
ENV  DJANGO_ENV ${DJANGO_ENV}
ENV  DJANGO_DEBUG True
ENV  DJANGO_SECRET_KEY "Djangokey"
ENV  DJANGO_PROJECT_ROOT /code/
ENV AZURE_TENANT_ID=${AZURE_TENANT_ID}
ENV AZURE_CLIENT_ID=${AZURE_CLIENT_ID}
ENV AZURE_CLIENT_SECRET=${AZURE_CLIENT_SECRET}
WORKDIR /code

COPY --from=dependencies /code/requirements.txt ./
COPY --from=dependencies /root/.cache /root/.cache

RUN pip install -r requirements.txt
COPY --from=build /code/ /code/

RUN mkfifo /var/log/cron.log
RUN chmod +x /code/scripts/startcron.sh
CMD /code/scripts/startcron.sh && cron -f 