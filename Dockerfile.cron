FROM python:3.7-alpine as base

FROM base as builder
RUN mkdir /install
WORKDIR /install
RUN apk add --no-cache python3 python3-dev py3-pip libffi libffi-dev musl-dev gcc libressl-dev bash
COPY requirements.txt /requirements.txt
RUN python -m venv venv
RUN source venv/bin/activate && pip install  --no-cache-dir   -r /requirements.txt
#RUN pip install  --no-cache-dir  --install-option="--prefix=/install" -r /requirements.txt
# RUN pip install  --no-cache-dir   -r /requirements.txt

FROM base
ENV PYTHONUNBUFFERED 1
ENV  DJANGO_ENV ${DJANGO_ENV}
ENV  DJANGO_DEBUG True
ENV  DJANGO_SECRET_KEY "Djangokey"
ENV  DJANGO_PROJECT_ROOT /code/
ENV AZURE_TENANT_ID=${AZURE_TENANT_ID}
ENV AZURE_CLIENT_ID=${AZURE_CLIENT_ID}
ENV AZURE_CLIENT_SECRET=${AZURE_CLIENT_SECRET}


COPY --from=builder /install/venv/lib/python3.7/site-packages/ /usr/local/lib/python3.7/site-packages/
RUN mkdir -p /code /code/logs /code/azurebucket/logs/ /code/scripts/logs
COPY . /code/
WORKDIR /code/
RUN apk add --no-cache bash
RUN mkfifo /var/log/cron.log
RUN chmod +x /code/scripts/startcron.sh
#RUN /code/scripts/startcron.sh
CMD /code/scripts/startcron.sh && crond -l 2 -f
